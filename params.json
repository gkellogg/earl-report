{"name":"Earl Report","tagline":"Ruby gem to consolidate multiple EARL reports and generate a rollup conformance report","body":"# earl-report\r\nRuby gem to consolidate multiple EARL report and generate a rollup conformance report.\r\n\r\n[![Gem Version](https://badge.fury.io/rb/earl-report.png)](http://badge.fury.io/rb/earl-report)\r\n[![Build Status](https://travis-ci.org/gkellogg/earl-report.png?branch=master)](http://travis-ci.org/gkellogg/earl-report)\r\n\r\n## Description\r\nReads a test manifest in the\r\n[standard RDF WG format](http://www.w3.org/2011/rdf-wg/wiki/Turtle_Test_Suite)\r\nalong with one or more individual EARL reports and generates a rollup report in\r\nHTML+RDFa in [ReSpec][] format.\r\n\r\n## Individual EARL reports\r\nResults for individual implementations should be specified in Turtle form, but\r\nmay be specified in an any compatible RDF serialization (JSON-LD is presumed to\r\nbe a cached rollup report). The report is composed of `Assertion` declarations\r\nin the following form:\r\n\r\n    [ a earl:Assertion;\r\n      earl:assertedBy <http://greggkellogg.net/foaf#me>;\r\n      earl:subject <http://rubygems.org/gems/rdf-turtle>;\r\n      earl:test <http://dvcs.w3.org/hg/rdf/raw-file/default/rdf-turtle/tests-ttl/manifest.ttl#turtle-syntax-file-01>;\r\n      earl:result [\r\n        a earl:TestResult;\r\n        earl:outcome earl:passed;\r\n        dc:date \"2012-11-17T15:19:11-05:00\"^^xsd:dateTime];\r\n      earl:mode earl:automatic ] .\r\n\r\nAdditionally, `earl:subject` is expected to reference a [DOAP]() description\r\nof the reported software, in the following form:\r\n\r\n    <http://rubygems.org/gems/rdf-turtle> a doap:Project, earl:TestSubject, earl:Software ;\r\n      doap:name          \"RDF::Turtle\" ;\r\n      doap:developer     <http://greggkellogg.net/foaf#me> ;\r\n      doap:homepage      <http://ruby-rdf.github.com/rdf-turtle> ;\r\n      doap:description   \"RDF::Turtle is an Turtle reader/writer for the RDF.rb library suite.\"@en ;\r\n      doap:programming-language \"Ruby\" .\r\n\r\nThe [DOAP]() description may be included in the [EARL]() report. If not found,\r\nthe IRI identified by `earl:subject` will be dereferenced and is presumed to\r\nprovide a [DOAP]() specification of the test subject.\r\n\r\nThe `doap:developer` is expected to reference a [FOAF]() profile for the agent\r\n(user or organization) responsible for the test subject. It is expected to be\r\nof the following form:\r\n\r\n    <http://greggkellogg.net/foaf#me> foaf:name \"Gregg Kellogg\" .\r\n\r\nIf not found, the IRI identified by `doap:developer`\r\nwill be dereferenced and is presumed to provide a [FOAF]() profile of the developer.\r\n\r\n## Manifest query\r\nThe test manifest is used to generate `earl:TestCase` entries for each test\r\ndescribed in the test manifest. It will also summarize each test, including\r\nany input and result files associated with the tests. The built-in query\r\nis based on the [standard RDF WG format](). Alternative manifest formats\r\ncan be used by specifying a customized manifest query. The default query\r\nis the following:\r\n\r\n    PREFIX dc: <http://purl.org/dc/terms/>\r\n    PREFIX mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#>\r\n    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n\r\n    SELECT ?lh ?uri ?title ?description ?testAction ?testResult\r\n    WHERE {\r\n      ?uri mf:name ?title; mf:action ?testAction.\r\n      OPTIONAL { ?uri rdfs:comment ?description. }\r\n      OPTIONAL { ?uri mf:result ?testResult. }\r\n      OPTIONAL { [ mf:entries ?lh] . ?lh rdf:first ?uri . }\r\n    }\r\n\r\nIf any result has a non-null `?lh`, it is taken as the list head and used\r\nto maintain the list order within `earl:tests`.\r\n\r\n## Report generation template\r\nThe report template is in [ReSpec][] form using [Haml]() to generate individual report elements.\r\n\r\n## Usage\r\nThe `earl-report` command may be used to directly create a report from zero or more input files, which are themselves [EARL][] report.\r\n\r\n    gem install earl-report\r\n    \r\n    earl-report \\\r\n      --base            # Base URI to use when loading test manifest\r\n      --bibRef          # ReSpec BibRef of specification being reported upon\r\n      --format          # Format of output, one of 'ttl', 'json', or 'html'\r\n      --json            # Input is a JSON-LD formatted result\r\n      --manifest        # Test manifest\r\n      --name            # Name of specification\r\n      --output          # Output report to file\r\n      --query           # Query, or file containing query for extracting information from Test manifest\r\n      --rc              # Write options to run-control file\r\n      --template        # Specify or return default report template\r\n      report*           # one or more EARL report in most RDF formats\r\n\r\nGenerally, creating a `json` format first is more efficient. Subsequent invocations can then use the `--json` and use the generated JSON-LD file instead of re-parsing each report.\r\n\r\n### Initialization File\r\n`earl-report` can take defaults for options from an initialization file.\r\nWhen run, `earl-report` attempts to open the file `.earl` in the current directory. This file is in [YAML][] format with entries for each option. Use the `--rc` option to automatically generate it.\r\n\r\n## Author\r\n* [Gregg Kellogg](http://github.com/gkellogg) - <http://greggkellogg.net/>\r\n\r\n## License\r\n\r\nThis software is licensed using [Unlicense](http://unlicense.org) and is freely available without encumbrance.\r\n\r\n[DOAP]:   https://github.com/edumbill/doap/wiki\r\n[EARL]:   http://www.w3.org/TR/EARL10-Schema/\r\n[FOAF]:   http://xmlns.com/foaf/spec/\r\n[Haml]:   http://haml.info/\r\n[YAML]:   http://www.yaml.org/\r\n[ReSpec]: http://dev.w3.org/2009/dap/ReSpec.js/documentation.html\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}